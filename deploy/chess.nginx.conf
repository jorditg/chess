upstream chess_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response (in case the Unicorn master nukes a
    # single worker for timing out).

    # for UNIX domain socket setups:
    # server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for TCP setups, point these to your backend servers
    server  127.0.0.1:9001 fail_timeout=0;
}

# Redirect all requests on the www subdomain to the root domain
server {
    listen      80;
    server_name chess.precisely.so;
    rewrite ^/(.*) http://www.precisely.so/$1 permanent;
}

# Serve static files and redirect any other request to Apache
server {
    listen       80;
    server_name  chess.precisely.so;

    root /opt/deploy/chess/static/;

    access_log  /var/log/deploy/chess/nginx/access.log;
    error_log  /var/log/deploy/chess/nginx/error.log;

    location ^~ /static {
        access_log off;
        expires 7d;
    }

    location ^~ /media {
        access_log off;
        expires 7d;
    }

    try_files $uri @proxy_to_app;

    # Setup named location for Django requests and handle proxy details
    location @proxy_to_app {
        proxy_pass         http://chess_server;
        proxy_redirect     off;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   Accept-Language  $language;
    }
}